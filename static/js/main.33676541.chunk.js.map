{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","App","useState","sortType","setSortType","isReversed","setIsReversed","preparedList","list","sortedList","Name","sort","a","b","localeCompare","Length","length","reverse","prepareList","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,iBAAAA,M,KAaL,IAqBaE,EAAM,WACjB,MAAgCC,mBAAmB,IAAnD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAzBwB,SAACC,EAAML,EAAUE,GAC/C,IAAMI,EAAU,YAAOD,GAEvB,OAAQL,GACN,KAAKJ,EAAOW,KACVD,EAAWE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC1C,MACF,KAAKd,EAAOgB,OACVN,EAAWE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAU3C,OAJIX,GACFI,EAAWQ,UAGNR,EAOcS,CAAYlB,EAAiBG,EAAUE,GAO5D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYlB,IAAaJ,EAAOW,OAEpCY,QAAS,kBAAMlB,EAAYL,EAAOW,OAPpC,iCAYA,wBACEU,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYlB,IAAaJ,EAAOgB,SAEpCO,QAAS,kBAAMlB,EAAYL,EAAOgB,SAPpC,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAahB,IAEjBiB,QAAS,kBAAMhB,GAAeD,IAPhC,sBAYEF,GAAYE,IAEV,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAjDQ,WAClBlB,EAAY,IACZE,GAAc,IA4CN,sBAUN,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCjHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.33676541.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  Name = 'name',\n  Length = 'length',\n}\n\ntype PrepareList = (\n  list: string[],\n  sortType: SortType,\n  isReverse: boolean\n) => string[];\n\ntype SortType = SortBy | '';\n\nconst prepareList:PrepareList = (list, sortType, isReversed) => {\n  const sortedList = [...list];\n\n  switch (sortType) {\n    case SortBy.Name:\n      sortedList.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortBy.Length:\n      sortedList.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    sortedList.reverse();\n  }\n\n  return sortedList;\n};\n\nexport const App = () => {\n  const [sortType, setSortType] = useState<SortType>('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const preparedList = prepareList(goodsFromServer, sortType, isReversed);\n\n  const handleReset = () => {\n    setSortType('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortBy.Name },\n          )}\n          onClick={() => setSortType(SortBy.Name)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortBy.Length },\n          )}\n          onClick={() => setSortType(SortBy.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {preparedList.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}